<?php
/**
 * Zikula Application Framework
 *
 * @copyright (c) 2001, Zikula Development Team
 * @link http://www.zikula.org
 * @version $Id: past.php 24342 2008-06-06 12:03:14Z markwest $
 * @license GNU/GPL - http://www.gnu.org/copyleft/gpl.html
 * @package Zikula_Value_Addons
 * @subpackage News
*/

/**
 * initialise block
 *
 * @author       The Zikula Development Team
 */
function News_pastblock_init()
{
    // Security
    pnSecAddSchema('Pastblock::', 'Block title::');
}

/**
 * get information on block
 *
 * @author       The Zikula Development Team
 * @return       array       The block information
 */
function News_pastblock_info()
{
    return array('text_type'      => 'Past',
                 'module'         => 'News',
                 'text_type_long' => 'Past Articles',
                 'allow_multiple' => true,
                 'form_content'   => false,
                 'form_refresh'   => false,
                 'show_preview'   => true);
}

/**
 * display block
 *
 * @author       The Zikula Development Team
 * @param        array       $blockinfo     a blockinfo structure
 * @return       output      the rendered bock
 */
function News_pastblock_display($blockinfo)
{
    // security check
    if (!SecurityUtil::checkPermission( 'Pastblock::', "$blockinfo[title]::", ACCESS_READ)) {
        return;
    }

    // get the number of stories shown on the frontpage
    $storyhome = pnModGetVar('News', 'itemsperpage');

    // Break out options from our content field
    $vars = pnBlockVarsFromContent($blockinfo['content']);

    // Defaults
    if (empty($storynum)) $storynum = 10;
    if (empty($vars['limit'])) {
        $vars['limit'] = 10;
    }
    $storynum = $vars['limit'];

    // call the API
    $articles = pnModAPIFunc('News', 'user', 'getall',
                             array('ihome' => 0, 'order' => 'time', 'startnum' => $storyhome+1, 'numitems' => $storynum));

    if (count($articles) == 0) {
        return;
    }

    // loop round the return articles grouping by date
    $count = 0;
    $news = array();
    $todaysnews = array();
    $limitreached = false;
    foreach ($articles as $article) {
        $info = pnModAPIFunc('News', 'user', 'getArticleInfo', $article);
        $links = pnModAPIFunc('News', 'user', 'getArticleLinks', $info);
        $preformat = pnModAPIFunc('News', 'user', 'getArticlePreformat', array('info' => $info, 'links' => $links));

        ereg ("([0-9]{4})-([0-9]{1,2})-([0-9]{1,2}) ([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2})", $info['time'], $datetime2);
        $datetime2 = ml_ftime("" . _DATESTRING2 . "", mktime($datetime2[4], $datetime2[5], $datetime2[6], $datetime2[2], $datetime2[3], $datetime2[1]));
        $datetime2 = ucfirst($datetime2);
        if (!isset($time2)) {
            $time2 = $datetime2;
        }
        if ($time2 == $datetime2) {
            $todaysnews[] = array('info' => $info, 'links' => $links, 'preformat' => $preformat);
        } else {
            $news[$time2] = $todaysnews;
            $todaysnews = array();
            $time2 = $datetime2;
        }
        $count++;
        if ($count == $vars['limit']) {
            $limitreached = true;
        }
    }
    $news[$time2] = $todaysnews;

    $pnRender = pnRender::getInstance('News');
    $pnRender->assign('news', $news);
    $pnRender->assign('limitreached', $limitreached);

    if (empty($blockinfo['title'])) {
        $blockinfo['title'] = _PASTARTICLES;
    }
    $blockinfo['content'] = $pnRender->fetch('news_block_past.htm');
    return pnBlockThemeBlock($blockinfo);
}

/**
 * modify block settings
 *
 * @author       The Zikula Development Team
 * @param        array       $blockinfo     a blockinfo structure
 * @return       output      the bock form
 */
function News_pastblock_modify($blockinfo)
{
    // Break out options from our content field
    $vars = pnBlockVarsFromContent($blockinfo['content']);

    // Defaults
    if (empty($vars['limit'])) {
        $vars['limit'] = 10;
    }

    // Create output object
    $pnRender = pnRender::getInstance('News');

    // As Admin output changes often, we do not want caching.
    $pnRender->caching = false;

    // assign the approriate values
    $pnRender->assign($vars);

    // Return the output that has been generated by this function
    return $pnRender->fetch('news_block_past_modify.htm');
}

/**
 * update block settings
 *
 * @author       The Zikula Development Team
 * @param        array       $blockinfo     a blockinfo structure
 * @return       $blockinfo  the modified blockinfo structure
 */
function News_pastblock_update($blockinfo)
{
    // Get current content
    $vars = pnBlockVarsFromContent($blockinfo['content']);

    // alter the corresponding variable
    $vars['limit'] = (int)FormUtil::getPassedValue('limit', null, 'POST');

    // write back the new contents
    $blockinfo['content'] = pnBlockVarsToContent($vars);

    // clear the block cache
    $pnRender = pnRender::getInstance('News');
    $pnRender->clear_cache('news_block_past.htm');

    return $blockinfo;
}
